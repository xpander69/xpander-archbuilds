From 1314e177d198c5ba2c515c5bf0a9b9c728a5726a Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Stefan=20D=C3=B6singer?= <stefan@codeweavers.com>
Date: Fri, 30 Aug 2013 10:41:42 +0200
Subject: [PATCH 114/127] wined3d: Fence update_texture calls
Reply-To: wine-devel <wine-devel@winehq.org>

---
 dlls/wined3d/cs.c     |  4 ++++
 dlls/wined3d/volume.c | 24 ++++++++++++++++--------
 2 files changed, 20 insertions(+), 8 deletions(-)

diff --git a/dlls/wined3d/cs.c b/dlls/wined3d/cs.c
index d921cc9..bb51e31 100644
--- a/dlls/wined3d/cs.c
+++ b/dlls/wined3d/cs.c
@@ -2165,6 +2165,8 @@ static UINT wined3d_cs_exec_update_texture(struct wined3d_cs *cs, const void *da
     device_exec_update_texture(context, op->src, op->dst);
     context_release(context);
 
+    wined3d_resource_dec_fence(&op->src->resource);
+
     return sizeof(*op);
 }
 
@@ -2178,6 +2180,8 @@ void wined3d_cs_emit_update_texture(struct wined3d_cs *cs, struct wined3d_textur
     op->src = src;
     op->dst = dst;
 
+    wined3d_resource_inc_fence(&op->src->resource);
+
     cs->ops->submit(cs, sizeof(*op));
 }
 
diff --git a/dlls/wined3d/volume.c b/dlls/wined3d/volume.c
index 2333856..47cc452 100644
--- a/dlls/wined3d/volume.c
+++ b/dlls/wined3d/volume.c
@@ -520,6 +520,17 @@ struct wined3d_resource * CDECL wined3d_volume_get_resource(struct wined3d_volum
     return &volume->resource;
 }
 
+static void wined3d_volume_wait_cs(const struct wined3d_volume *volume)
+{
+    if (wined3d_settings.cs_multithreaded)
+    {
+        struct wined3d_device *device = volume->resource.device;
+        FIXME("Waiting for cs.\n");
+        wined3d_cs_emit_glfinish(device->cs);
+        device->cs->ops->finish(device->cs);
+    }
+}
+
 HRESULT CDECL wined3d_volume_map(struct wined3d_volume *volume,
         struct wined3d_map_desc *map_desc, const struct wined3d_box *box, DWORD flags)
 {
@@ -531,14 +542,6 @@ HRESULT CDECL wined3d_volume_map(struct wined3d_volume *volume,
     TRACE("volume %p, map_desc %p, box %p, flags %#x.\n",
             volume, map_desc, box, flags);
 
-    if (wined3d_settings.cs_multithreaded)
-    {
-        struct wined3d_device *device = volume->resource.device;
-        FIXME("Waiting for cs.\n");
-        wined3d_cs_emit_glfinish(device->cs);
-        device->cs->ops->finish(device->cs);
-    }
-
     if (!(volume->resource.access_flags & WINED3D_RESOURCE_ACCESS_CPU))
     {
         WARN("Volume %p is not CPU accessible.\n", volume);
@@ -547,6 +550,11 @@ HRESULT CDECL wined3d_volume_map(struct wined3d_volume *volume,
     }
     flags = wined3d_resource_sanitize_map_flags(&volume->resource, flags);
 
+    if (!(volume->resource.access_flags & WINED3D_RESOURCE_ACCESS_GPU))
+        wined3d_resource_wait_fence(&volume->container->resource);
+    else
+        wined3d_volume_wait_cs(volume);
+
     if (volume->flags & WINED3D_VFLAG_PBO)
     {
         context = context_acquire(device, NULL);
-- 
1.8.1.5

