From 75e6b2ce6c52cac5b4882f0ab71373581d1f1b81 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Stefan=20D=C3=B6singer?= <stefan@codeweavers.com>
Date: Fri, 30 Aug 2013 17:06:29 +0200
Subject: [PATCH 118/127] wined3d: Separate volume map and draw buffers
Reply-To: wine-devel <wine-devel@winehq.org>

---
 dlls/wined3d/volume.c          | 6 ++++--
 dlls/wined3d/wined3d_private.h | 2 +-
 2 files changed, 5 insertions(+), 3 deletions(-)

diff --git a/dlls/wined3d/volume.c b/dlls/wined3d/volume.c
index 5afded2..b1c31c5 100644
--- a/dlls/wined3d/volume.c
+++ b/dlls/wined3d/volume.c
@@ -365,6 +365,7 @@ static void wined3d_volume_prepare_pbo(struct wined3d_volume *volume, struct win
 
     volume->resource.buffer = wined3d_device_get_bo(volume->resource.device,
             volume->resource.size, GL_STREAM_DRAW_ARB, GL_PIXEL_UNPACK_BUFFER_ARB, context);
+    volume->resource.map_buffer = volume->resource.buffer;
     if (!volume->resource.buffer)
         ERR("Failed to create buffer for volume %p\n", volume);
     else
@@ -379,6 +380,7 @@ static void wined3d_volume_free_pbo(struct wined3d_volume *volume)
     TRACE("Deleting PBO %u belonging to volume %p.\n", volume->resource.buffer->name, volume);
     wined3d_device_release_bo(device, volume->resource.buffer, context);
     volume->resource.buffer = NULL;
+    volume->resource.map_buffer = NULL;
 
     context_release(context);
 }
@@ -563,7 +565,7 @@ HRESULT CDECL wined3d_volume_map(struct wined3d_volume *volume,
         else
             wined3d_volume_load_location(volume, context, WINED3D_LOCATION_BUFFER);
 
-        GL_EXTCALL(glBindBufferARB(GL_PIXEL_UNPACK_BUFFER_ARB, volume->resource.buffer->name));
+        GL_EXTCALL(glBindBufferARB(GL_PIXEL_UNPACK_BUFFER_ARB, volume->resource.map_buffer->name));
 
         if (gl_info->supported[ARB_MAP_BUFFER_RANGE])
         {
@@ -668,7 +670,7 @@ HRESULT CDECL wined3d_volume_unmap(struct wined3d_volume *volume)
         struct wined3d_context *context = context_acquire(device, NULL);
         const struct wined3d_gl_info *gl_info = context->gl_info;
 
-        GL_EXTCALL(glBindBufferARB(GL_PIXEL_UNPACK_BUFFER_ARB, volume->resource.buffer->name));
+        GL_EXTCALL(glBindBufferARB(GL_PIXEL_UNPACK_BUFFER_ARB, volume->resource.map_buffer->name));
         GL_EXTCALL(glUnmapBufferARB(GL_PIXEL_UNPACK_BUFFER_ARB));
         GL_EXTCALL(glBindBufferARB(GL_PIXEL_UNPACK_BUFFER_ARB, 0));
         checkGLcall("Unmap PBO");
diff --git a/dlls/wined3d/wined3d_private.h b/dlls/wined3d/wined3d_private.h
index 85d829d..dcb7419 100644
--- a/dlls/wined3d/wined3d_private.h
+++ b/dlls/wined3d/wined3d_private.h
@@ -2047,7 +2047,7 @@ struct wined3d_resource
     DWORD priority;
     BYTE *allocatedMemory; /* Pointer to the real data location */
     void *heap_memory;
-    struct wined3d_gl_bo *buffer;
+    struct wined3d_gl_bo *buffer, *map_buffer;
     struct list privateData;
     struct list resource_list_entry;
     LONG access_fence;
-- 
1.8.1.5

