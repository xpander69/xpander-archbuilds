From 01a7024e90eed34e27b2d3d1c20a1058b7ccf0a9 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Stefan=20D=C3=B6singer?= <stefan@codeweavers.com>
Date: Thu, 29 Aug 2013 22:25:14 +0200
Subject: [PATCH 112/127] wined3d: Don't lock the src volume in
 device_update_volume
Reply-To: wine-devel <wine-devel@winehq.org>

This will attempt to wait for the CS, but this code is executed by the CS, so
it will, among other problems, break the single producer, single consumer
assumption of the work queue.
---
 dlls/wined3d/device.c          | 10 +---------
 dlls/wined3d/volume.c          |  9 +++++++++
 dlls/wined3d/wined3d_private.h |  2 ++
 3 files changed, 12 insertions(+), 9 deletions(-)

diff --git a/dlls/wined3d/device.c b/dlls/wined3d/device.c
index 86ecbda..7bf773d 100644
--- a/dlls/wined3d/device.c
+++ b/dlls/wined3d/device.c
@@ -3404,7 +3404,6 @@ void CDECL wined3d_device_draw_indexed_primitive_instanced(struct wined3d_device
 static HRESULT device_update_volume(struct wined3d_context *context,
         struct wined3d_volume *src_volume, struct wined3d_volume *dst_volume)
 {
-    struct wined3d_map_desc src;
     HRESULT hr;
     struct wined3d_bo_address data;
 
@@ -3424,18 +3423,11 @@ static HRESULT device_update_volume(struct wined3d_context *context,
         return WINED3DERR_INVALIDCALL;
     }
 
-    if (FAILED(hr = wined3d_volume_map(src_volume, &src, NULL, WINED3D_MAP_READONLY)))
-        return hr;
-
     wined3d_volume_load(dst_volume, context, FALSE);
-
-    data.buffer_object = 0;
-    data.addr = src.data;
+    wined3d_volume_get_memory(src_volume, &data);
     wined3d_volume_upload_data(dst_volume, context, &data);
     wined3d_volume_invalidate_location(dst_volume, ~WINED3D_LOCATION_TEXTURE_RGB);
 
-    hr = wined3d_volume_unmap(src_volume);
-
     return hr;
 }
 
diff --git a/dlls/wined3d/volume.c b/dlls/wined3d/volume.c
index b0d5c9d..2333856 100644
--- a/dlls/wined3d/volume.c
+++ b/dlls/wined3d/volume.c
@@ -757,3 +757,12 @@ HRESULT CDECL wined3d_volume_create(struct wined3d_device *device, UINT width, U
 
     return WINED3D_OK;
 }
+
+void wined3d_volume_get_memory(const struct wined3d_volume *volume, struct wined3d_bo_address *data)
+{
+    data->buffer_object = volume->pbo;
+    if (data->buffer_object)
+        data->addr = NULL;
+    else
+        data->addr = volume->resource.heap_memory;
+}
diff --git a/dlls/wined3d/wined3d_private.h b/dlls/wined3d/wined3d_private.h
index 1bcc4ec..f9c3594 100644
--- a/dlls/wined3d/wined3d_private.h
+++ b/dlls/wined3d/wined3d_private.h
@@ -2173,6 +2173,8 @@ void volume_set_container(struct wined3d_volume *volume, struct wined3d_texture
 void wined3d_volume_invalidate_location(struct wined3d_volume *volume, DWORD location) DECLSPEC_HIDDEN;
 void wined3d_volume_upload_data(struct wined3d_volume *volume, const struct wined3d_context *context,
         const struct wined3d_bo_address *data) DECLSPEC_HIDDEN;
+void wined3d_volume_get_memory(const struct wined3d_volume *volume,
+        struct wined3d_bo_address *data) DECLSPEC_HIDDEN;
 
 struct wined3d_surface_dib
 {
-- 
1.8.1.5

