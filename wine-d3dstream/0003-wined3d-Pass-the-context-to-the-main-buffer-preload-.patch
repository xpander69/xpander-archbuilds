From 9caab9630e3749460667e2bcf132e44bd07c4ddb Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Stefan=20D=C3=B6singer?= <stefan@codeweavers.com>
Date: Tue, 18 Dec 2012 13:36:42 +0100
Subject: [PATCH 003/127] wined3d: Pass the context to the main buffer preload
 function
Reply-To: wine-devel <wine-devel@winehq.org>

---
 dlls/wined3d/buffer.c          | 17 +++++++++--------
 dlls/wined3d/context.c         |  2 +-
 dlls/wined3d/device.c          |  2 +-
 dlls/wined3d/wined3d_private.h |  2 ++
 4 files changed, 13 insertions(+), 10 deletions(-)

diff --git a/dlls/wined3d/buffer.c b/dlls/wined3d/buffer.c
index 36200b6..8f1b541 100644
--- a/dlls/wined3d/buffer.c
+++ b/dlls/wined3d/buffer.c
@@ -732,14 +732,13 @@ static void buffer_direct_upload(struct wined3d_buffer *This, const struct wined
     checkGLcall("glUnmapBufferARB");
 }
 
-/* Do not call while under the GL lock. */
-void CDECL wined3d_buffer_preload(struct wined3d_buffer *buffer)
+/* Context activation is done by the caller. */
+void buffer_internal_preload(struct wined3d_buffer *buffer, struct wined3d_context *context)
 {
     DWORD flags = buffer->flags & (WINED3D_BUFFER_NOSYNC | WINED3D_BUFFER_DISCARD);
     struct wined3d_device *device = buffer->resource.device;
     UINT start = 0, end = 0, len = 0, vertices;
     const struct wined3d_gl_info *gl_info;
-    struct wined3d_context *context;
     BOOL decl_changed = FALSE;
     unsigned int i, j;
     BYTE *data;
@@ -759,9 +758,7 @@ void CDECL wined3d_buffer_preload(struct wined3d_buffer *buffer)
         /* TODO: Make converting independent from VBOs */
         if (buffer->flags & WINED3D_BUFFER_CREATEBO)
         {
-            context = context_acquire(device, NULL);
             buffer_create_buffer_object(buffer, context);
-            context_release(context);
             buffer->flags &= ~WINED3D_BUFFER_CREATEBO;
         }
         else
@@ -870,14 +867,11 @@ void CDECL wined3d_buffer_preload(struct wined3d_buffer *buffer)
             return;
         }
 
-        context = context_acquire(device, NULL);
         buffer_direct_upload(buffer, context->gl_info, flags);
 
-        context_release(context);
         return;
     }
 
-    context = context_acquire(device, NULL);
     gl_info = context->gl_info;
 
     if(!(buffer->flags & WINED3D_BUFFER_DOUBLEBUFFER))
@@ -930,6 +924,13 @@ void CDECL wined3d_buffer_preload(struct wined3d_buffer *buffer)
     }
 
     HeapFree(GetProcessHeap(), 0, data);
+}
+
+void CDECL wined3d_buffer_preload(struct wined3d_buffer *buffer)
+{
+    struct wined3d_context *context;
+    context = context_acquire(buffer->resource.device, NULL);
+    buffer_internal_preload(buffer, context);
     context_release(context);
 }
 
diff --git a/dlls/wined3d/context.c b/dlls/wined3d/context.c
index d062c22..f2386e9 100644
--- a/dlls/wined3d/context.c
+++ b/dlls/wined3d/context.c
@@ -2376,7 +2376,7 @@ BOOL context_apply_draw_state(struct wined3d_context *context, struct wined3d_de
     if (state->index_buffer)
     {
         if (device->stream_info.all_vbo)
-            wined3d_buffer_preload(state->index_buffer);
+            buffer_internal_preload(state->index_buffer, context);
         else
             buffer_get_sysmem(state->index_buffer, context);
     }
diff --git a/dlls/wined3d/device.c b/dlls/wined3d/device.c
index 95e1a61..3c0392e 100644
--- a/dlls/wined3d/device.c
+++ b/dlls/wined3d/device.c
@@ -288,7 +288,7 @@ static void device_stream_info_from_declaration(struct wined3d_device *device, s
 
         element = &stream_info->elements[i];
         buffer = state->streams[element->stream_idx].buffer;
-        wined3d_buffer_preload(buffer);
+        buffer_internal_preload(buffer, context);
 
         /* If the preload dropped the buffer object, update the stream info. */
         if (buffer->buffer_object != element->data.buffer_object)
diff --git a/dlls/wined3d/wined3d_private.h b/dlls/wined3d/wined3d_private.h
index e07fa82..f01ebbf 100644
--- a/dlls/wined3d/wined3d_private.h
+++ b/dlls/wined3d/wined3d_private.h
@@ -2521,6 +2521,8 @@ static inline struct wined3d_buffer *buffer_from_resource(struct wined3d_resourc
 void buffer_get_memory(struct wined3d_buffer *buffer, struct wined3d_context *context,
         struct wined3d_bo_address *data) DECLSPEC_HIDDEN;
 BYTE *buffer_get_sysmem(struct wined3d_buffer *This, struct wined3d_context *context) DECLSPEC_HIDDEN;
+void buffer_internal_preload(struct wined3d_buffer *buffer,
+        struct wined3d_context *context) DECLSPEC_HIDDEN;
 
 struct wined3d_rendertarget_view
 {
-- 
1.8.1.5

