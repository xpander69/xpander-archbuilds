From de172092a0ba03f7dfe2f2459bd3ee1f800d8791 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Stefan=20D=C3=B6singer?= <stefan@codeweavers.com>
Date: Tue, 6 Aug 2013 17:39:26 +0200
Subject: [PATCH 110/127] wined3d: Send flips through the command stream
Reply-To: wine-devel <wine-devel@winehq.org>

---
 dlls/wined3d/cs.c              | 30 ++++++++++++++++++++++++++++++
 dlls/wined3d/surface.c         | 14 ++++----------
 dlls/wined3d/swapchain.c       |  2 +-
 dlls/wined3d/wined3d_private.h |  4 +++-
 4 files changed, 38 insertions(+), 12 deletions(-)

diff --git a/dlls/wined3d/cs.c b/dlls/wined3d/cs.c
index 5e5d71e..659e7d1 100644
--- a/dlls/wined3d/cs.c
+++ b/dlls/wined3d/cs.c
@@ -82,6 +82,7 @@ enum wined3d_cs_op
     WINED3D_CS_OP_SURFACE_PRELOAD,
     WINED3D_CS_OP_UPDATE_TEXTURE,
     WINED3D_CS_OP_EVICT_RESOURCE,
+    WINED3D_CS_OP_SURFACE_FLIP,
     WINED3D_CS_OP_STOP,
 };
 
@@ -439,6 +440,12 @@ struct wined3d_cs_evict_resource
     struct wined3d_resource *resource;
 };
 
+struct wined3d_cs_surface_flip
+{
+    enum wined3d_cs_op opcode;
+    struct wined3d_surface *surface, *override;
+};
+
 static void wined3d_cs_mt_submit(struct wined3d_cs *cs, size_t size)
 {
     LONG new_val = (cs->queue.head + size) & (WINED3D_CS_QUEUE_SIZE - 1);
@@ -2188,6 +2195,28 @@ void wined3d_cs_emit_evict_resource(struct wined3d_cs *cs, struct wined3d_resour
     cs->ops->submit(cs, sizeof(*op));
 }
 
+static UINT wined3d_cs_exec_surface_flip(struct wined3d_cs *cs, const void *data)
+{
+    const struct wined3d_cs_surface_flip *op = data;
+
+    surface_flip(op->surface, op->override);
+
+    return sizeof(*op);
+}
+
+void wined3d_cs_emit_surface_flip(struct wined3d_cs *cs, struct wined3d_surface *surface,
+        struct wined3d_surface *override)
+{
+    struct wined3d_cs_surface_flip *op;
+
+    op = cs->ops->require_space(cs, sizeof(*op));
+    op->opcode = WINED3D_CS_OP_SURFACE_FLIP;
+    op->surface = surface;
+    op->override = override;
+
+    cs->ops->submit(cs, sizeof(*op));
+}
+
 static UINT (* const wined3d_cs_op_handlers[])(struct wined3d_cs *cs, const void *data) =
 {
     /* WINED3D_CS_OP_NOP                    */ wined3d_cs_exec_nop,
@@ -2249,6 +2278,7 @@ static UINT (* const wined3d_cs_op_handlers[])(struct wined3d_cs *cs, const void
     /* WINED3D_CS_OP_SURFACE_PRELOAD        */ wined3d_cs_exec_surface_preload,
     /* WINED3D_CS_OP_UPDATE_TEXTURE         */ wined3d_cs_exec_update_texture,
     /* WINED3D_CS_OP_EVICT_RESOURCE         */ wined3d_cs_exec_evict_resource,
+    /* WINED3D_CS_OP_SURFACE_FLIP           */ wined3d_cs_exec_surface_flip,
 };
 
 static inline void *_wined3d_cs_mt_require_space(struct wined3d_cs *cs, size_t size, BOOL prio)
diff --git a/dlls/wined3d/surface.c b/dlls/wined3d/surface.c
index 26a292b..a69f5ad 100644
--- a/dlls/wined3d/surface.c
+++ b/dlls/wined3d/surface.c
@@ -4081,6 +4081,8 @@ HRESULT CDECL wined3d_surface_releasedc(struct wined3d_surface *surface, HDC dc)
 
 HRESULT CDECL wined3d_surface_flip(struct wined3d_surface *surface, struct wined3d_surface *override, DWORD flags)
 {
+    struct wined3d_device *device = surface->resource.device;
+
     TRACE("surface %p, override %p, flags %#x.\n", surface, override, flags);
 
     if (flags)
@@ -4105,15 +4107,7 @@ HRESULT CDECL wined3d_surface_flip(struct wined3d_surface *surface, struct wined
         return WINEDDERR_NOTFLIPPABLE;
     }
 
-    if (wined3d_settings.cs_multithreaded)
-    {
-        struct wined3d_device *device = surface->resource.device;
-        FIXME("Waiting for cs.\n");
-        wined3d_cs_emit_glfinish(device->cs);
-        device->cs->ops->finish(device->cs);
-    }
-
-    flip_surface(surface, override);
+    wined3d_cs_emit_surface_flip(device->cs, surface, override);
 
     /* Update overlays if they're visible. */
     if ((surface->resource.usage & WINED3DUSAGE_OVERLAY) && surface->overlay_dest)
@@ -4719,7 +4713,7 @@ static HRESULT d3dfmt_convert_surface(const BYTE *src, BYTE *dst, UINT pitch, UI
     return WINED3D_OK;
 }
 
-void flip_surface(struct wined3d_surface *front, struct wined3d_surface *back)
+void surface_flip(struct wined3d_surface *front, struct wined3d_surface *back)
 {
     /* Flip the surface contents */
     /* Flip the DC */
diff --git a/dlls/wined3d/swapchain.c b/dlls/wined3d/swapchain.c
index db0950c..b703a90 100644
--- a/dlls/wined3d/swapchain.c
+++ b/dlls/wined3d/swapchain.c
@@ -604,7 +604,7 @@ static void swapchain_gl_present(struct wined3d_swapchain *swapchain, const RECT
         if (front->resource.size == back_buffer->resource.size)
         {
             DWORD fbflags;
-            flip_surface(front, back_buffer);
+            surface_flip(front, back_buffer);
 
             /* Tell the front buffer surface that is has been modified. However,
              * the other locations were preserved during that, so keep the flags.
diff --git a/dlls/wined3d/wined3d_private.h b/dlls/wined3d/wined3d_private.h
index baf90b4..1bcc4ec 100644
--- a/dlls/wined3d/wined3d_private.h
+++ b/dlls/wined3d/wined3d_private.h
@@ -2315,7 +2315,7 @@ void get_drawable_size_fbo(const struct wined3d_context *context, UINT *width, U
 
 void draw_textured_quad(const struct wined3d_surface *src_surface, struct wined3d_context *context,
         const RECT *src_rect, const RECT *dst_rect, enum wined3d_texture_filter_type filter) DECLSPEC_HIDDEN;
-void flip_surface(struct wined3d_surface *front, struct wined3d_surface *back) DECLSPEC_HIDDEN;
+void surface_flip(struct wined3d_surface *front, struct wined3d_surface *back) DECLSPEC_HIDDEN;
 
 /* Surface flags: */
 #define SFLAG_CONVERTED         0x00000001 /* Converted for color keying or palettized. */
@@ -2613,6 +2613,8 @@ void wined3d_cs_emit_surface_preload(struct wined3d_cs *cs, struct wined3d_surfa
 void wined3d_cs_emit_update_texture(struct wined3d_cs *cs, struct wined3d_texture *src,
         struct wined3d_texture *dst) DECLSPEC_HIDDEN;
 void wined3d_cs_emit_evict_resource(struct wined3d_cs *cs, struct wined3d_resource *resource) DECLSPEC_HIDDEN;
+void wined3d_cs_emit_surface_flip(struct wined3d_cs *cs, struct wined3d_surface *surface,
+        struct wined3d_surface *override) DECLSPEC_HIDDEN;
 
 /* Direct3D terminology with little modifications. We do not have an issued state
  * because only the driver knows about it, but we have a created state because d3d
-- 
1.8.1.5

