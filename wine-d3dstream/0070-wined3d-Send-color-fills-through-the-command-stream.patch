From 21e45fac78be7ae7d90a41d774833a6bf0d25df1 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Stefan=20D=C3=B6singer?= <stefan@codeweavers.com>
Date: Thu, 4 Jul 2013 21:10:16 +0200
Subject: [PATCH 070/127] wined3d: Send color fills through the command stream
Reply-To: wine-devel <wine-devel@winehq.org>

---
 dlls/wined3d/cs.c              | 33 +++++++++++++++++++++++++++++++++
 dlls/wined3d/device.c          | 11 +++--------
 dlls/wined3d/wined3d_private.h |  2 ++
 3 files changed, 38 insertions(+), 8 deletions(-)

diff --git a/dlls/wined3d/cs.c b/dlls/wined3d/cs.c
index 877beff..d4b27ce 100644
--- a/dlls/wined3d/cs.c
+++ b/dlls/wined3d/cs.c
@@ -65,6 +65,7 @@ enum wined3d_cs_op
     WINED3D_CS_OP_SET_LIGHT,
     WINED3D_CS_OP_SET_LIGHT_ENABLE,
     WINED3D_CS_OP_BLT,
+    WINED3D_CS_OP_COLOR_FILL,
     WINED3D_CS_OP_STOP,
 };
 
@@ -315,6 +316,14 @@ struct wined3d_cs_blt
     enum wined3d_texture_filter_type filter;
 };
 
+struct wined3d_cs_color_fill
+{
+    enum wined3d_cs_op opcode;
+    struct wined3d_surface *surface;
+    RECT rect;
+    struct wined3d_color color;
+};
+
 static CRITICAL_SECTION wined3d_cs_list_mutex;
 static CRITICAL_SECTION_DEBUG wined3d_cs_list_mutex_debug =
 {
@@ -1708,6 +1717,29 @@ void wined3d_cs_emit_blt(struct wined3d_cs *cs, struct wined3d_surface *dst_surf
     cs->ops->submit(cs);
 }
 
+static UINT wined3d_cs_exec_color_fill(struct wined3d_cs *cs, const void *data)
+{
+    const struct wined3d_cs_color_fill *op = data;
+
+    surface_color_fill(op->surface, &op->rect, &op->color);
+
+    return sizeof(*op);
+}
+
+void wined3d_cs_emit_color_fill(struct wined3d_cs *cs, struct wined3d_surface *surface,
+        const RECT *rect, const struct wined3d_color *color)
+{
+    struct wined3d_cs_color_fill *op;
+
+    op = cs->ops->require_space(cs, sizeof(*op));
+    op->opcode = WINED3D_CS_OP_COLOR_FILL;
+    op->surface = surface;
+    op->rect = *rect;
+    op->color = *color;
+
+    cs->ops->submit(cs);
+}
+
 static UINT (* const wined3d_cs_op_handlers[])(struct wined3d_cs *cs, const void *data) =
 {
     /* WINED3D_CS_OP_FENCE                  */ wined3d_cs_exec_fence,
@@ -1752,6 +1784,7 @@ static UINT (* const wined3d_cs_op_handlers[])(struct wined3d_cs *cs, const void
     /* WINED3D_CS_OP_SET_LIGHT              */ wined3d_cs_exec_set_light,
     /* WINED3D_CS_OP_SET_LIGHT_ENABLE       */ wined3d_cs_exec_set_light_enable,
     /* WINED3D_CS_OP_BLT                    */ wined3d_cs_exec_blt,
+    /* WINED3D_CS_OP_COLOR_FILL             */ wined3d_cs_exec_color_fill,
 };
 
 static void *wined3d_cs_mt_require_space(struct wined3d_cs *cs, size_t size)
diff --git a/dlls/wined3d/device.c b/dlls/wined3d/device.c
index 6d27c57..b27c602 100644
--- a/dlls/wined3d/device.c
+++ b/dlls/wined3d/device.c
@@ -3771,20 +3771,15 @@ HRESULT CDECL wined3d_device_color_fill(struct wined3d_device *device,
         return WINED3DERR_INVALIDCALL;
     }
 
-    if (wined3d_settings.cs_multithreaded)
-    {
-        FIXME("Waiting for cs.\n");
-        wined3d_cs_emit_glfinish(device->cs);
-        device->cs->ops->finish(device->cs);
-    }
-
     if (!rect)
     {
         SetRect(&r, 0, 0, surface->resource.width, surface->resource.height);
         rect = &r;
     }
 
-    return surface_color_fill(surface, rect, color);
+    wined3d_cs_emit_color_fill(device->cs, surface, rect, color);
+
+    return WINED3D_OK;
 }
 
 /* Do not call while under the GL lock. */
diff --git a/dlls/wined3d/wined3d_private.h b/dlls/wined3d/wined3d_private.h
index 0fbb0fe..3d1d680 100644
--- a/dlls/wined3d/wined3d_private.h
+++ b/dlls/wined3d/wined3d_private.h
@@ -2581,6 +2581,8 @@ void wined3d_cs_emit_blt(struct wined3d_cs *cs, struct wined3d_surface *dst_surf
         const RECT *dst_rect, struct wined3d_surface *src_surface,
         const RECT *src_rect, DWORD flags, const WINEDDBLTFX *fx,
         enum wined3d_texture_filter_type filter) DECLSPEC_HIDDEN;
+void wined3d_cs_emit_color_fill(struct wined3d_cs *cs, struct wined3d_surface *surface,
+        const RECT *rect, const struct wined3d_color *color) DECLSPEC_HIDDEN;
 
 /* Direct3D terminology with little modifications. We do not have an issued state
  * because only the driver knows about it, but we have a created state because d3d
-- 
1.8.1.5

